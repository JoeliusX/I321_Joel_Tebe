@startuml
actor Client
participant "pizzaRoutes.js" as Route
participant "authMiddleware.js" as Auth
participant "pizzaController.js" as Controller
participant "pizzaModel.js" as Model
database "Database" as DB

== Pizza Creation Flow ==

Client -> Route : POST /pizzas {name, price, ingredients[]}
Route -> Auth : verifyToken(req, res, next)

alt Auth Failed
    Auth --> Client : 401 Unauthorized
else Auth Passed
    Auth -> Controller : createPizza(req, res)
    Controller -> Model : insertPizza(name, price, dailyPizza, pictureLink)

    alt Model Error
        Model --> Controller : throw error
        Controller --> Client : 400 Bad Request
    else Success
        Model -> DB : INSERT INTO pizzas (...)
        DB --> Model : new pizzaId
        Controller -> Model : insertIngredients(pizzaId, ingredients[])
        Model -> DB : INSERT INTO pizzas_has_ingredients (pizzaId, ingredientId)
        DB --> Model : Success
        Model --> Controller : Success
        Controller --> Client : 200 OK { "message": "Pizza created" }
    end
end

== Unexpected Error Case ==
Controller --> Client : 500 Internal Server Error

@enduml
